clear all
close all
clc




%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETERS DEFINITION %%%%%%%%%%%%%%%%%%%%%%%%
w=2*pi*2.5e9  %Frequency
Vdd = 1.2;    %Supply voltage
pout=0.200;   %Output Power
kn=5.26e-4;   %transistor parameter
q=1.7         % q design variable
m=0.5         % m design variable  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    

%%%%%%%%%%%% DESIGN KIT DEVELOPMENT FOR EACH q and m design variable %%%%%%
%There is no closed form so the designer for an array of q values has to
%create a for loop where it runs the code below

     a = (-1 + sqrt(1 - 4*((q*m)^2)) )/(2*m);
     b = (-1 - sqrt(1 - 4*((q*m)^2)) )/(2*m);

     a1 = Vdd*...
       (q^2)*((a - (exp(a*pi) - exp(b*pi))*m*(-1 + q^2) - ...
          a*exp(b*pi)*(m^2)*(-1 + q^2)^2 + ...
          b*(-1 + exp(a*pi)*(m^2)*(-1 + q^2)^2) + (a - b)*(1 +... 
             (m^2)*(-1 + q^2)^2)*cos(pi*q)));

     b1 = Vdd*...
       q*((m*q*(-1 + (q^2))*(b*(1 + exp(a*pi)) -... 
             a*(1 + exp(b*pi)) + (exp(a*pi) - exp(b*pi))*m*(-1 + ...
                (q^2))) + (a - b)*(1 + (m^2)*(-1 + q^2)^2)*sin(pi*q)));

     d1 = Vdd*((-1 + q^2)*(1 + (m^2)*(-1 + q^2)^2)*(b*exp(a*pi) -... 
           a*exp(b*pi) + (a - b)*cos(pi*q)));

     a2 = Vdd*(q^2)*((m*q*(-1 + q^2)*(a*(1 + 2*(b^2) - exp(b*pi)) - ...
             b*(-1 + exp(a*pi))*(-1 + b*m*(-1 + (q^2))) + ...
             (a^2)*(-2*b + (-1 + exp(b*pi))*m*(-1 + q^2))) + ...
          a*(a - b)*b*(1 + m^2*(-1 + q^2)^2)*sin(pi*q)));

     b2 = q.*Vdd.*(a.*((-1)+exp(1).^(b.*pi)).*m.^2.*((-1).*q+q.^3).^2+(-1).* ...
      b.*((-1)+exp(1).^(a.*pi)).*m.*q.^2.*((-1)+q.^2).*(b+m.*((-1)+q.^2) ...
      )+(-1).*a.*b.^2.*(1+(-2).*q.^2+m.^2.*((-1)+q.^2).^2)+a.^2.*(((-1)+ ...
      exp(1).^(b.*pi)).*m.*q.^2.*((-1)+q.^2)+b.*(1+(-2).*q.^2+m.^2.*(( ...
      -1)+q.^2).^2))+(-1).*a.*(a+(-1).*b).*b.*(1+m.^2.*((-1)+q.^2).^2).* ...
      cos(pi.*q));


     d2 = ((-1)+q.^2).*(1+m.^2.*((-1)+q.^2).^2).*Vdd.*((-1).*b.^2.*((-1)+ ...
      exp(1).^(a.*pi)).*q+a.^2.*((-1)+exp(1).^(b.*pi)).*q+a.*(a+(-1).*b) ...
      .*b.*sin(pi.*q));

     pres = (-1).*((a2.*b1+(-1).*a1.*b2).^2).^(-1/2).*(a2.^2.*d1.^2+b2.^2.* ...
      d1.^2+(-2).*a1.*a2.*d1.*d2+(-2).*b1.*b2.*d1.*d2+(a1.^2+b1.^2).* ...
      d2.^2).^(1/2);

     alfares = ...
      atan2((a2.*b1+(-1) ...
      .*a1.*b2).*((a2.*b1+(-1).*a1.*b2).^2).^(-1/2).*(a2.*d1+(-1).*a1.* ...
      d2).*(a2.^2.*d1.^2+b2.^2.*d1.^2+(-2).*a1.*a2.*d1.*d2+(-2).*b1.* ...
      b2.*d1.*d2+(a1.^2+b1.^2).*d2.^2).^(-1/2),(a2.*b1+(-1).*a1.*b2).*((a2.*b1+(-1).*a1.*b2).^2).^(-1/2).*(( ...
      -1).*b2.*d1+b1.*d2).*(a2.^2.*d1.^2+b2.^2.*d1.^2+(-2).*a1.*a2.*d1.* ...
      d2+(-2).*b1.*b2.*d1.*d2+(a1.^2+b1.^2).*d2.^2).^(-1/2));

     con1 = (a+(-1).*b).^(-1).*Vdd.*((-1).*a+(-1).*m.*pres.*q.^2.*(1+m.^2.*(( ...
      -1)+q.^2).^2).^(-1).*(((-1)+a.*m.*((-1)+q.^2)).*cos(alfares)+(a+ ...
      m.*((-1)+q.^2)).*sin(alfares)));

     con2 = (a+(-1).*b).^(-1).*Vdd.*(b+m.*pres.*q.^2.*(1+m.^2.*((-1)+q.^2).^2) ...
      .^(-1).*(((-1)+b.*m.*((-1)+q.^2)).*cos(alfares)+(b+m.*((-1)+q.^2)) ...
      .*sin(alfares)));

     con3 = (-1).*((-1)+q.^2).^(-1).*Vdd.*(((-1)+q.^2+pres.*q.^2.*cos(alfares) ...
      ).*cos(2.*pi.*q)+pres.*q.*sin(alfares).*sin(2.*pi.*q));

     con4 =((-1)+q.^2).^(-1).*Vdd.*(pres.*q.*cos(2.*pi.*q).*sin(alfares)+(-1) ...
      .*((-1)+q.^2+pres.*q.^2.*cos(alfares)).*sin(2.*pi.*q));

     von = @(x) con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*((-1+q^2)^2) );

     ans3=von(1*10^-9);
     %(((Vdd.*m.*pres.*(q.^2))/(1+(m.^2).*((-1)+q.^2).^2)).*

     voff = @(x) Vdd+con3.*cos(q.*w.*x)+(-1).*pres.*q.^2.*(1+(-1).*q.^2).^(-1).* ...
      Vdd.*cos(alfares+w.*x)+con4.*sin(q.*w.*x);

     

     func_joint=@(x) ((con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*(-1+q^2)^2)).^2 ...
      -Vdd*(con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*(-1+q^2)^2)));

     chop = integral((func_joint),0, pi/w);

     kl = (-((pres*Vdd*q)^2)*m*pi)/(w*chop);

     kc = 1/((q^2)*kl);

     kp = (pres^2)/(2*(kl^2));

     func1=@(x) ((con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*((-1+q^2)^2) ))/pi)...
      .*sin(w*x + alfares);

    func2=@(x) ((Vdd+(-1).*pres.*q.^2.*(1+(-1).*q.^2).^(-1).*Vdd.*cos(alfares+w.*x) ...
      +(-1).*((-1)+q.^2).^(-1).*Vdd.*cos(q.*w.*x).*(((-1)+q.^2+pres.* ...
      q.^2.*cos(alfares)).*cos(2.*pi.*q)+pres.*q.*sin(alfares).*sin(2.* ...
      pi.*q))+((-1)+q.^2).^(-1).*Vdd.*(pres.*q.*cos(2.*pi.*q).*sin( ...
      alfares)+(-1).*((-1)+q.^2+pres.*q.^2.*cos(alfares)).*sin(2.*pi.*q) ...
      ).*sin(q.*w.*x))/pi).*sin(w*x + alfares);

    func3=@(x) ((con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*((-1+q^2)^2)))/pi)...
      .*cos(w*x + alfares);

    func4=@(x) ((Vdd+(-1).*pres.*q.^2.*(1+(-1).*q.^2).^(-1).*Vdd.*cos(alfares+w.*x) ...
      +(-1).*((-1)+q.^2).^(-1).*Vdd.*cos(q.*w.*x).*(((-1)+q.^2+pres.* ...
      q.^2.*cos(alfares)).*cos(2.*pi.*q)+pres.*q.*sin(alfares).*sin(2.* ...
      pi.*q))+((-1)+q.^2).^(-1).*Vdd.*(pres.*q.*cos(2.*pi.*q).*sin( ...
      alfares)+(-1).*((-1)+q.^2+pres.*q.^2.*cos(alfares)).*sin(2.*pi.*q) ...
      ).*sin(q.*w.*x))/pi).*cos(w*x + alfares);

     vr = integral(func1,0, pi/w) + ...
       integral(func2, pi/w, (2*pi)/w);

     vx = integral(func3,0, pi/w) + ...
       integral(func4,pi/w, (2*pi)/w);

     kx = vx/vr;


     funcr1=@(x) ((con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*(-1+q^2)^2)).^2);

     funcr2=@(x) (Vdd*(con2.*exp(a.*w.*x)+con1.*exp(b.*w.*x)+Vdd+...
     (m*pres*(q^2)*Vdd*(m*(-1+(q^2))*cos(alfares+w*x)+sin(alfares+w*x)))/(1+(m^2)*((-1+q^2)^2))));

     intr1=integral(funcr1,0,pi/w);
     intr2=integral(funcr2,0,pi/w);

     eficiencia=1-(intr1/intr2);
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     
%%%%%%%%%%% PARAMETERS CALCULATION %%%%%%%%%%%%%
    
     rout=(kp*(Vdd^2))/pout; %Output resistance
     cshunt=kc/(w*rout);     %Shunt capacitance
     ron=m/(cshunt*w);       %on-resistance
     w_trans=(2.12*L)/(kn*(1.2-0.3)*ron); %Transistor width parametrization

     
     Q = 10;                %Tank quality factor
     Lhar = (Q*rout)/w;     %Tank inductor
     Char = 1/((w^2)*Lhar); %Tank capacitance
     
     %Additional tank reactance
     X_tank=kx*rout;
     if(X_tank<0)
         x_tank_aux=-1/(w*X_tank);
     else
         x_tank_aux=X_tank/w;
     end
     
     
     Pdc=((w/(2*pi*ron))*intr2);            %Theoretical Supply Power
     Pout=(w/(2*pi*ron))*((intr2)-intr1);   %Theoretical Output Power
     PAE=(Pout-Pin)/((w/(2*pi*ron))*intr2); %Theoretical Power Added Efficiency
     Pswitch=(w/(2*pi*ron))*(intr1);        %Theoretical Switch losses

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   




